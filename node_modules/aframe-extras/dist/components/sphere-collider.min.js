!function e(t,i,r){function n(s,c){if(!i[s]){if(!t[s]){var l="function"==typeof require&&require;if(!c&&l)return l(s,!0);if(o)return o(s,!0);var u=new Error("Cannot find module '"+s+"'");throw u.code="MODULE_NOT_FOUND",u}var a=i[s]={exports:{}};t[s][0].call(a.exports,function(e){var i=t[s][1][e];return n(i?i:e)},a,a.exports,e,t,i,r)}return i[s].exports}for(var o="function"==typeof require&&require,s=0;s<r.length;s++)n(r[s]);return n}({1:[function(e,t,i){AFRAME.registerComponent("sphere-collider",e("./src/misc/sphere-collider"))},{"./src/misc/sphere-collider":2}],2:[function(e,t,i){t.exports={schema:{objects:{"default":""},state:{"default":"collided"},radius:{"default":.05}},init:function(){this.els=[],this.collisions=[]},update:function(){var e,t=this.data;e=t.objects?this.el.sceneEl.querySelectorAll(t.objects):this.el.sceneEl.children,this.els=Array.prototype.slice.call(e)},tick:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){function i(i){var r,n,s;i.isEntity&&(n=i.getObject3D("mesh"),n&&n.geometry&&(n.getWorldPosition(t),n.geometry.computeBoundingSphere(),r=n.geometry.boundingSphere.radius,s=e.distanceTo(t),s<r+o.radius&&c.push({el:i,distance:s})))}function r(e){e.el.emit("hit"),e.el.addState(o.state),n.emit("hit",{el:e.el})}var n=this.el,o=this.data,s=n.getObject3D("mesh"),c=[];s&&(e.copy(n.object3D.getWorldPosition()),this.els.forEach(i),c.sort(function(e,t){return e.distance>t.distance?1:-1}).forEach(r),0===c.length&&n.emit("hit",{el:null}),this.collisions.filter(function(e){return c.indexOf(e)===-1}).forEach(function(e){e.el.removeState(o.state)}),this.collisions=c)}}()}},{}]},{},[1]);